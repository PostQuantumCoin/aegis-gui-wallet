// This is just an example,
// so you can safely delete all default props below

export default {
	// title or common
	home: 'Home',
	send: 'Send',
	receive: 'Receive',
	block: 'Block',
	transation: 'Transation',
	explorer: 'Explorer',
	mine: 'Mine',
	detail: 'Detail',
	label: 'Label',
	options: 'Options',
	history: 'History',
	account: 'Account',
	password: 'Password',
	settings: 'Settings',
	result: 'Result',
	finish: 'Finish',
	import: 'Import',
	importing: 'Importing',
	export: 'Export',
	reindex: 'Reindex',
	reindexing: 'Reindexing',
	address: 'Address',
	wallet: 'Wallet',
	time: 'Time',
	nonce: 'Nonce',
	hash: 'Hash',
	preHash: 'Previous hash',
	merkleroot: 'Merkle root',
	nBit: 'nBit',
	connection: 'Connection',
	difficulty: 'Difficulty',
	fees: 'Fees',
	height: 'Height',
	status: 'Status',
	rebooting: 'Rebooting',
	nodeStatus: 'Node status',
	connecting: 'Connecting',
	language: 'Language',
	default: 'Default',
	photonDetail: 'Photon detail',
	signatrue: 'Signatrue',
	notfound: 'Not found',
	loading: 'Loading',
	backup: 'Backup',
	description: 'Description',
	// Button text
	cancel: 'Cancel',
	confirm: 'Confirm',
	confirmed: 'Confirmed',
	continue: 'Continue',
	reset: 'Reset',
	new: 'New',
	generate: 'Generate',
	start: 'Start',
	stop: 'Stop',
	enter: 'Enter',
	back: 'Back',
	save: 'Save',
	// Confirm dialog title
	fail: 'Failure',
	success: 'Success',
	confirmation: 'Confirmation',
	error: 'Error',
	wrongInput: 'Wrong input',
	// Startup
	enterWallet: 'Enter Wallet',
	syncBlocks: 'Synchronizing blocks',
	initApp: 'Initializing the application',
	syncCompletion: 'Synchronized completion',
	// Crypto
	FAKE: 'Fake certificate',
	Secp256k1: 'Secp256k1',
	Nist_round3_Dilithium3: 'Dilithium3 NIST round 3',
	Nist_round3_Dilithium5: 'Dilithium5 NIST round 3',
	Nist_round3_Falcon512: 'Falcon512 NIST round 3',
	Nist_round3_Falcon1024: 'Falcon1024 NIST round 3',
	// Block
	blockHash: 'Block hash',
	blockHeader: 'Block header',
	blockList: 'Block List',
	blockVersion: 'Version',
	blockTx: 'Block Tx',
	blockTxN: 'Block Tx index',
	// Transaction
	txid: 'TxID',
	vin: 'Vin',
	vout: 'Vout',
	txType: 'Type',
	txValue: 'Value',
	txDetail: 'Transation detail',
	txConfirm: 'Confirm',
	txUnconfirm: 'Unconfirm',
	txConfirmations: 'Confirmations',
	txCount: 'Tx count',
	txPool: 'Tx pool',
	balanceComfirmed: 'Comfirmed',
	balanceUncomfirmed: 'Uncomfirmed',
	nLockTime: 'nLockTime',
	opReturn: 'OP_Return',
	pqcert: 'PQCert',
	pqcertHash: 'PQCert hash',
	pqcertType: 'PQCert type',
	pqcertAmount: 'PQCert amount',
	pqcertLevel: 'Level',
	pqcertVersion: 'Version',
	txTotalInput: 'Total input',
	txTotalOutput: 'Total output',
	txVersion: 'Tx version',
	previousOutput: 'Previous output',
	txSequence: 'Sequence',
	txSpent: 'Spent',
	signType: 'Signature type',
	lockScript: 'Lock script',
	unlockScript: 'Unlock script',
	pubKey: 'Public key',
	pubKeyHash: 'Public key hash',
	// Footer status
	mining: 'Mining',
	idle: 'Idle',
	blockHeight: 'Block height',
	activeConnections: 'Active connections',
	// Wallet
	genWallet: 'Generate wallet',
	walletLabel: 'Wallet label',
	signatureSystem: 'Signature system',
	walletLabelPlaceholder: 'The label of wallet',
	walletPasswordPlaceholder: 'The password of the wallet',
	walletPasswordCheckPlaceholder: 'Re-enter the password of wallet',
	canUsedSignatures: 'The signatures that can be used',
	minSignaturesUsed: 'The minimum number of signatures required to be used',
	selectAddType: 'Import or generate',
	pickWalletFile: 'Pick wallet file',
	importWallet: 'Import wallet',
	walletNotfound: 'Wallet not found',
	genWalletDone: 'Generating wallet done.',
	genWalletFail: 'Generate wallet failed.',
	importError: 'Import error related to the password or something else',
	importSuccess: 'Import success',
	importDuplicate: 'Import duplicate',
	passwordIsEmpty: 'The password of the wallet is empty.',
	// Address
	addAddress: 'Add address',
	multiPqcSignatures: 'Multisignatures / Post-quantum signatures',
	addressSecurityLevel: 'Security level',
	addressSecurityLevelHint: "How many signatures would be used in the address?",
	addressFakeCert: 'Fake certificate',
	addressFakeCertHint: 'False public key certificates enhance the randomness in generating addresses.',
	addressShuffle: 'Shuffle',
	addressNotfound: 'Address not found',
	addressShuffleHint: 'The sequence of signatures is generated randomly.',
	addAddressDone: 'Add address done.',
	addAddressFail: 'Add address failed. If using the same content of signature, please add fake certificate.',
	// settings
	blockFilePath: 'Block file path',
	walletFilePath: 'Wallet file path',
	rpcLabel: 'RPC',
	rpcConnectAuth: 'Authenticate a connection',
	rpcConnectAuthAccountErr: 'Authentication account length must be greater or equal to 0 digits.',
	rpcConnectAuthPasswordErr: 'Authentication password length must be greater or equal to 8 digits.',
	connectOtherNode: 'Connect to other node',
	connectOtherNodeHint: 'If enabled, you can connect to other nodes and turn off AEGIS core server.',
	host: 'Host',
	rpcHostErr: 'The host for the RPC must be specified in either IPv4 or IPv6 format.',
	port: 'Port',
	portErr: 'The port can only be in the range of 1 to 65535.',
	p2pLabel: 'P2P',
	lockP2PByOtherNode: "P2P networks may not function properly due to the use of proprietary or closed protocols by some nodes.",
	maxConnections: 'Max connections',
	maxConnectionsErr: 'The maximum of connections must be greater than 0.',
	feeRatio: 'Fee ratio',
	feeRatioErr: 'The ratio of fee must be greater than 0.',
	settingsUnaltered: 'Settings remain unaltered.',
	saveSettingsFail: 'Failed to save the settings file.',
	rpcConnectTimeout: 'The connection to the RPC has timed out. Please verify the settings. The configuration file has been restored.',
	saveSettingsSuccess: 'Save setting successfully.',
	saveSettingsSuccessReboot: 'Settings saved and reboot completed successfully.',
	resetSettingsComfirm: 'Do you want to restore the settings to their original values?',
	resetSettingsError: 'The configuration file has been reset, but the RPC connection is not functioning. Please verify that network ports {p2pPort} and {rpcPort} are not occupied.',
	resetSettingsSuccess: 'Reset the settings file successfully.',
	reindexSuccess: 'Reindex successfully.',
	// Home
	totalConfirm: 'Total confirmed',
	totalUnconfirm: 'Total unconfirmed',
	addressDetailError: "Unexpected errors encountered when opening the address detail, Please try again.",
	// Send
	noBalance: 'No balance',
	sendPageStepperTitleFromAddress: 'From',
	sendPageStepperTitleToAddress: 'To',
	sendPageStepperTitleDescription: 'Description',
	sendPageStepperTitleWalletPassword: 'Password',
	sendPageStepperTitleFinalCheck: 'Final check',
	sendPageStepperTitleFinishStep: 'Finish',
	sendPageFromAddress: 'From',
	sendPageToAddress: 'To',
	sendPageSendAmount: 'Send Amount',
	sendPageChangeAddress: 'Change Address',
	fromTableInfo: 'Select the address that want to transfer from',
	fromTableNoDataLabel: 'Please add some addresses to this wallet.',
	fromTableTooltipText: 'Use all the unspent transaction outputs of this address.',
	useAllUTXO: 'Use all UTXO',
	sendAddressSelectedAndTotalAmount: '{addressAmount} address selected. Total amount: {totalAmount} AGS.',
	toAddrAmountTitle: 'Sendable amount (include fee) : ',
	toAddrTotalSend: 'Total send amount : ',
	toAddrFormatError: 'The received address format is incorrect',
	toAddrMinSend: 'The minimum amount to send is 0.00000001 AGS',
	opReturnHexCheckbox: 'Hex OP_Return',
	opReturnHexCheckboxTooltip: 'The OP_Return should be encoded in hexadecimal.',
	wrongPassword: 'The password of the wallet is wrong, please try again.',
	checkUTXOAmount: 'UTXO Amount',
	changeAmount: 'Change Amount',
	totalPhotons: 'Total Photons',
	unlockScriptPhoton: 'unlockScript photon:',
	pqcertPhoton: 'pqcert photon:',
	descriptionPhoton: 'description photon:',
	otherPhoton: 'other photon:',
	saveSetting: 'Save setting',
	finalCheckSaveTooltip: 'Save settings such as Signatures, UTXO and fee ratio.',
	sendCheckCompleted: 'Check completed',
	finishSuccess: 'SUCCESS!',
	fromAddressNoSelected: 'No address selected yet.',
	addressFormatError: 'The address <{address}> is not AGEIS address.',
	addressSendAmountError: 'The address <{address}> send amount must be greater than 0.00000001 AGS.',
	addressSignSystemNoSelected: 'The address <{address}> signature systems was not select at all.',
	addressBalanceEmpty: 'The address <{address}> balance is empty.',
	atLeastOneReceivingAddr: 'Add at least one receiving address.',
	feeNotZero: 'The fee ratio must be greater than zero.',
	feeNotNumber: 'The fee ratio must be integer.',
	changeAddressFormatError: '\'Change address\' is not AGEIS address.',
	reviewThisTx: 'Please review the content of this transaction and check \'Check completed\'.',
	copySuccess: 'Copy success',
	// explorer
	explorerBlock: 'Block',
	explorerHeader: 'Header',
	explorerTx: 'Tx',
	explorerHeaderSearchLabel: 'Search by either block hash or height',
	explorerTxSearchLabel: 'Search by TxID',
	explorerPQCertSearchLabel: 'Search by PQCert hash',
	explorerHeaderInputHint: 'Please input either 64 hexadecimal characters or an integer.' ,
	explorerTxInputHint: 'Please input 64 hexadecimal characters' ,
	explorerPQCertInputHint: 'Please input 64 hexadecimal characters' ,
	// mine
	selectWallet: 'Select wallet',
	selectWalletErr: 'Please select wallet',
	selectAddress: 'Select address',
	selectAddressErr: 'Please select address',
	useFahrenheit: 'Use Fahrenheit',
	GPUSelectAtLeast1: 'Select at least one GPU.',
	GPUNotfound: 'Your GPU is not found or not supported, please check your GPU or restart the AEGIS app.',
	miningCheck: 'Check mining',
	miningTo: 'Mining to',
	// others
	exportWalletDone: 'Exporting wallet done.',
	getAddressFail: 'Failed to get address list.',
	getBalanceFail: 'Failed to get address balance.',
	exportWalletFail: 'Exporting wallet failed, please try again.',
	changeWalletFail: 'Change wallet failed, please try again.',
}
